{
    "docs": [
        {
            "location": "/index.html",
            "text": "Matrix ACE\n\n\nWelcome\n\n\nWelcome to Mediaware\u2019s Matrix Audio Control Engine (Matrix ACE) Help.\n\n\nMatrix ACE is a Linux software application which adjusts audio loudness levels between adjoining video ads and programs and between adjacent playout channels to provide a more uniform listening experience to viewers of television and video.\n\n\nRelease notes\n\n\nPlease check the \nRelease Notes\n distributed with Matrix ACE for the latest information on the shipped product.\n\n\nSupport\n\n\nFor product support, please contact:\n\n\nEmail: \nsupport@mediaware.com.au\n.\n\n\nTelephone: +61 2 6163 8700 (Australian Office Hours 9am - 5pm).\n\n\nHelp Version\n\n\nHelp Version 1.0.0, November 2017",
            "title": "Welcome"
        },
        {
            "location": "/index.html#matrix-ace",
            "text": "",
            "title": "Matrix ACE"
        },
        {
            "location": "/index.html#welcome",
            "text": "Welcome to Mediaware\u2019s Matrix Audio Control Engine (Matrix ACE) Help.  Matrix ACE is a Linux software application which adjusts audio loudness levels between adjoining video ads and programs and between adjacent playout channels to provide a more uniform listening experience to viewers of television and video.",
            "title": "Welcome"
        },
        {
            "location": "/index.html#release-notes",
            "text": "Please check the  Release Notes  distributed with Matrix ACE for the latest information on the shipped product.",
            "title": "Release notes"
        },
        {
            "location": "/index.html#support",
            "text": "For product support, please contact:  Email:  support@mediaware.com.au .  Telephone: +61 2 6163 8700 (Australian Office Hours 9am - 5pm).",
            "title": "Support"
        },
        {
            "location": "/index.html#help-version",
            "text": "Help Version 1.0.0, November 2017",
            "title": "Help Version"
        },
        {
            "location": "/Overview/index.html",
            "text": "Overview\n\n\nMatrix\n\n\nMatrix is Mediaware\u2019s modular, scalable software chassis for flexible transport stream processing. Designed for broadcasters using compressed video for satellite, terrestrial, cable and IP television, Matrix allows operators to flexibly configure our stream processing technologies in the form of modules operating within a consolidated technology platform.\n\n\nACE\n\n\nMediaware\u2019s Matrix Audio Control Engine (Matrix ACE) is software that adjusts audio loudness levels between adjoining video ads and programs and between adjacent playout channels to provide a more uniform listening experience to viewers of television and video.\n\n\nAdjustment of average perceived loudness\n\n\nMatrix ACE adjusts audio within MPEG Transport Streams so that it conforms to industry standard \naverage perceived loudness\n levels, enabling satellite, terrestrial, cable, IP and B2B television network customers to meet regulatory requirements in the headend without the need for baseband equipment.\n\n\nUtilizing Mediaware\u2019s advanced transport stream processing engine, together with a powerful loudness processing solution, Matrix ACE conforms audio to the desired loudness profile. Common loudness profiles are built-in (including ATSC A/85, EBU R128, ARIB TR-B32 and FreeTV OP59), or custom settings can be applied as needed.\n\n\nThis marriage of technologies enables Matrix ACE to provide loudness compliance to multiple channels directly within statistically multiplexed transport streams, ensuring that video is passed through unchanged and audio has the desired loudness profile applied without loss in quality.",
            "title": "Overview"
        },
        {
            "location": "/Overview/index.html#overview",
            "text": "",
            "title": "Overview"
        },
        {
            "location": "/Overview/index.html#matrix",
            "text": "Matrix is Mediaware\u2019s modular, scalable software chassis for flexible transport stream processing. Designed for broadcasters using compressed video for satellite, terrestrial, cable and IP television, Matrix allows operators to flexibly configure our stream processing technologies in the form of modules operating within a consolidated technology platform.",
            "title": "Matrix"
        },
        {
            "location": "/Overview/index.html#ace",
            "text": "Mediaware\u2019s Matrix Audio Control Engine (Matrix ACE) is software that adjusts audio loudness levels between adjoining video ads and programs and between adjacent playout channels to provide a more uniform listening experience to viewers of television and video.",
            "title": "ACE"
        },
        {
            "location": "/Overview/index.html#adjustment-of-average-perceived-loudness",
            "text": "Matrix ACE adjusts audio within MPEG Transport Streams so that it conforms to industry standard  average perceived loudness  levels, enabling satellite, terrestrial, cable, IP and B2B television network customers to meet regulatory requirements in the headend without the need for baseband equipment.  Utilizing Mediaware\u2019s advanced transport stream processing engine, together with a powerful loudness processing solution, Matrix ACE conforms audio to the desired loudness profile. Common loudness profiles are built-in (including ATSC A/85, EBU R128, ARIB TR-B32 and FreeTV OP59), or custom settings can be applied as needed.  This marriage of technologies enables Matrix ACE to provide loudness compliance to multiple channels directly within statistically multiplexed transport streams, ensuring that video is passed through unchanged and audio has the desired loudness profile applied without loss in quality.",
            "title": "Adjustment of average perceived loudness"
        },
        {
            "location": "/Architecture/index.html",
            "text": "Architecture\n\n\nEthernet (UDP/IP) and ASI input/output\n\n\nThe Matrix ACE software is installed onto server hardware with Ethernet and/or ASI card adaptors installed to provide input and output interfaces for the Transport Streams to be processed.\n\n\n\n\nAudio elementary stream loudness processing\n\n\nMatrix ACE accepts a Single Program Transport Stream (SPTS) or Multiple Program Transport Stream (MPTS) as input, which then has each of its audio Elementary Streams split out by the Mediaware Transport Stream processing engine for processing by the loudness processor.\n\n\nThe audio elementary streams are decoded, processed to match the configured loudness profile and re-encoded. The re-encoded audio elementary streams are then packetized and the packets are written into the exact byte positions in the output transport stream as the input packets had.\n\n\nNon-audio elementary streams pass-through untouched\n\n\nAll non-audio elementary streams pass through untouched and without loss, and audio elementary streams are processed to conform to the configured loudness profiles without loss in quality.\n\n\nMultiple Programs (channels) within the transport stream can have their audio elementary streams processed for loudness simultaneously. Hardware specifications are the factor which limits the number of programs (channels) that can be processed by each server.",
            "title": "Architecture"
        },
        {
            "location": "/Architecture/index.html#architecture",
            "text": "",
            "title": "Architecture"
        },
        {
            "location": "/Architecture/index.html#ethernet-udpip-and-asi-inputoutput",
            "text": "The Matrix ACE software is installed onto server hardware with Ethernet and/or ASI card adaptors installed to provide input and output interfaces for the Transport Streams to be processed.",
            "title": "Ethernet (UDP/IP) and ASI input/output"
        },
        {
            "location": "/Architecture/index.html#audio-elementary-stream-loudness-processing",
            "text": "Matrix ACE accepts a Single Program Transport Stream (SPTS) or Multiple Program Transport Stream (MPTS) as input, which then has each of its audio Elementary Streams split out by the Mediaware Transport Stream processing engine for processing by the loudness processor.  The audio elementary streams are decoded, processed to match the configured loudness profile and re-encoded. The re-encoded audio elementary streams are then packetized and the packets are written into the exact byte positions in the output transport stream as the input packets had.",
            "title": "Audio elementary stream loudness processing"
        },
        {
            "location": "/Architecture/index.html#non-audio-elementary-streams-pass-through-untouched",
            "text": "All non-audio elementary streams pass through untouched and without loss, and audio elementary streams are processed to conform to the configured loudness profiles without loss in quality.  Multiple Programs (channels) within the transport stream can have their audio elementary streams processed for loudness simultaneously. Hardware specifications are the factor which limits the number of programs (channels) that can be processed by each server.",
            "title": "Non-audio elementary streams pass-through untouched"
        },
        {
            "location": "/LoudnessProcessingExplained/index.html",
            "text": "Loudness processing explained\n\n\nDifferences in the perceived levels of loudness in audio content between adjacent channels, programs, news, weather and advertisements in radio, video, television and movies has been an ongoing source of consternation for listeners. Loudness processing involves adapting the audio signals from (adjacent) audio sources so that they more closely align in perceived loudness, resulting in smoother transitions between them. The goal of loudness processing is to provide an overall more consistent listening experience for consumers.\n\n\nMeasuring Loudness - ITU-R BS.1770\n\n\nLoudness values have historically depended on the electronic measurement of sampled peak levels in audio signals. This form of measurement provided a loophole for \u201ctweaking\u201d audio levels, so that audio producers and sound engineers, working in a commercial environment, found ways to make their audio appear louder than their competitors and thus gain marketing advantage. The outcome was a spectrum of audio content with very inconsistent actual perceived loudness level and wide variations in the quality of content.\n\n\nThis competition for the attention of customers through manipulation of audio levels was coined The Loudness Wars. In an attempt to end The Loudness Wars and to provide a better listening experience for consumers, the International Telecommunications Union (ITU) formalized the outcome of research into finding an algorithm to measure perceived loudness in audio: Recommendation ITU-R BS.1770 - Algorithms to measure audio programme loudness and true-peak audio level.\n\n\nLoudness Standards\n\n\nAs a result of the wide adoption of ITU-R BS.1770 (now at version 4, 10/2015), standards bodies around the globe have implemented its recommendations and national bodies have made compliance to the relevant standard mandatory in their respective constituencies.\n\n\nStandards\n\n\n\n\nEBU R128 (Europe)\n\n\nATSC A/85 (USA)\n\n\nARIB TR-B32 (Japan)\n\n\nFreeTV OP-59 (Australia)\n\n\n\n\nConforming audio to loudness standards\n\n\nLoudness processing involves the use of software algorithms to normalize the average perceived loudness of a program or stream to match a given loudness profile. Matrix ACE provides a set of pre-configured standards-based loudness profiles to easily conform audio to regulatory loudness requirements.\n\n\nThe algorithms conform audio output to a Target Loudness Level using adaptation algorithms that preserve the source audio quality, while normalizing loudness and enhancing spoken dialog.",
            "title": "Loudness processing explained"
        },
        {
            "location": "/LoudnessProcessingExplained/index.html#loudness-processing-explained",
            "text": "Differences in the perceived levels of loudness in audio content between adjacent channels, programs, news, weather and advertisements in radio, video, television and movies has been an ongoing source of consternation for listeners. Loudness processing involves adapting the audio signals from (adjacent) audio sources so that they more closely align in perceived loudness, resulting in smoother transitions between them. The goal of loudness processing is to provide an overall more consistent listening experience for consumers.",
            "title": "Loudness processing explained"
        },
        {
            "location": "/LoudnessProcessingExplained/index.html#measuring-loudness-itu-r-bs1770",
            "text": "Loudness values have historically depended on the electronic measurement of sampled peak levels in audio signals. This form of measurement provided a loophole for \u201ctweaking\u201d audio levels, so that audio producers and sound engineers, working in a commercial environment, found ways to make their audio appear louder than their competitors and thus gain marketing advantage. The outcome was a spectrum of audio content with very inconsistent actual perceived loudness level and wide variations in the quality of content.  This competition for the attention of customers through manipulation of audio levels was coined The Loudness Wars. In an attempt to end The Loudness Wars and to provide a better listening experience for consumers, the International Telecommunications Union (ITU) formalized the outcome of research into finding an algorithm to measure perceived loudness in audio: Recommendation ITU-R BS.1770 - Algorithms to measure audio programme loudness and true-peak audio level.",
            "title": "Measuring Loudness - ITU-R BS.1770"
        },
        {
            "location": "/LoudnessProcessingExplained/index.html#loudness-standards",
            "text": "As a result of the wide adoption of ITU-R BS.1770 (now at version 4, 10/2015), standards bodies around the globe have implemented its recommendations and national bodies have made compliance to the relevant standard mandatory in their respective constituencies.",
            "title": "Loudness Standards"
        },
        {
            "location": "/LoudnessProcessingExplained/index.html#standards",
            "text": "EBU R128 (Europe)  ATSC A/85 (USA)  ARIB TR-B32 (Japan)  FreeTV OP-59 (Australia)",
            "title": "Standards"
        },
        {
            "location": "/LoudnessProcessingExplained/index.html#conforming-audio-to-loudness-standards",
            "text": "Loudness processing involves the use of software algorithms to normalize the average perceived loudness of a program or stream to match a given loudness profile. Matrix ACE provides a set of pre-configured standards-based loudness profiles to easily conform audio to regulatory loudness requirements.  The algorithms conform audio output to a Target Loudness Level using adaptation algorithms that preserve the source audio quality, while normalizing loudness and enhancing spoken dialog.",
            "title": "Conforming audio to loudness standards"
        },
        {
            "location": "/ConfiguringMatrixACE/index.html",
            "text": "Configuring Matrix ACE\n\n\nMatrix ACE is configured via its web user interface.\n\n\nConfiguration of Matrix ACE involves navigating to the main user interface landing page - the \nDashboard\n.\n\n\n\n\nFrom the Dashboard each input is configured to have some or all of its audio elementary streams processed for loudness in a \nLoudness Processing Workflow\n.\n\n\nWithin each loudness processing workflow, each applicable audio elementary stream has a \nLoudness Profile\n associated with it.\n\n\nThe loudness profile is used to apply the loudness values configured for that profile to the processing of the audio elementary stream.\n\n\nClick on the topic links below to read more detail about configuring Matrix ACE.\n\n\n\n\nThe Dashboard\n\n\nLoudness Processing Workflows\n\n\nLoudness Profiles",
            "title": "Configuring Matrix ACE"
        },
        {
            "location": "/ConfiguringMatrixACE/index.html#configuring-matrix-ace",
            "text": "Matrix ACE is configured via its web user interface.  Configuration of Matrix ACE involves navigating to the main user interface landing page - the  Dashboard .   From the Dashboard each input is configured to have some or all of its audio elementary streams processed for loudness in a  Loudness Processing Workflow .  Within each loudness processing workflow, each applicable audio elementary stream has a  Loudness Profile  associated with it.  The loudness profile is used to apply the loudness values configured for that profile to the processing of the audio elementary stream.  Click on the topic links below to read more detail about configuring Matrix ACE.   The Dashboard  Loudness Processing Workflows  Loudness Profiles",
            "title": "Configuring Matrix ACE"
        },
        {
            "location": "/Dashboard/index.html",
            "text": "The Dashboard\n\n\nThe starting page of the Matrix ACE web user interface is the Dashboard.\n\n\nLists the current configuration\n\n\nThe Dashboard lists all configured Loudness Processing Workflows , showing input details, the number of audio streams being processed and output details for each workflow.\n\n\n\n\nCreate, modify and delete loudness processing workflows\n\n\nFrom the Dashboard users can create, modify and delete loudness processing workflow.\n\n\nThe image below shows the Dashboard displaying a list of configured loudness processing workflows.",
            "title": "The Dashboard"
        },
        {
            "location": "/Dashboard/index.html#the-dashboard",
            "text": "The starting page of the Matrix ACE web user interface is the Dashboard.",
            "title": "The Dashboard"
        },
        {
            "location": "/Dashboard/index.html#lists-the-current-configuration",
            "text": "The Dashboard lists all configured Loudness Processing Workflows , showing input details, the number of audio streams being processed and output details for each workflow.",
            "title": "Lists the current configuration"
        },
        {
            "location": "/Dashboard/index.html#create-modify-and-delete-loudness-processing-workflows",
            "text": "From the Dashboard users can create, modify and delete loudness processing workflow.  The image below shows the Dashboard displaying a list of configured loudness processing workflows.",
            "title": "Create, modify and delete loudness processing workflows"
        },
        {
            "location": "/LoudnessProcessingWorkflows/index.html",
            "text": "Loudness processing workflows\n\n\nThe processing of MPEG Transport Streams for loudness normalization is configured from the Matrix ACEDashboard.\n\n\nEach loudness processing workflow consists of:\n\n\n\n\nValues for Input parameters\n\n\nProgram IDs for each audio elementary stream to be processed\n\n\nThe Loudness Profile to apply to each audio elementary stream defined\n\n\nValues for Output parameters\n\n\n\n\n\n\nInput parameters\n\n\nEach input must be an MPEG Transport Stream (SPTS or MPTS) arriving at the server via UDP/IP (Ethernet) or ASI interfaces.\n\n\nAudio elementary stream Program IDs (PIDs)\n\n\nEach audio elementary stream to be processed for loudness normalization, must be identified by its Program ID (PID).\n\n\nLoudness profiles\n\n\nA loudness profile must be selected to apply to each audio elementary stream. The loudness profile provides parameters for the loudness normalization of the audio stream.\n\n\nOutput parameters\n\n\nEach input must have a corresponding output configured. Output can be configured for UDP/IP (Ethernet) or ASI interfaces.\n\n\nCreate a new loudness processing workflow\n\n\nThe processing of MPEG Transport Streams for loudness control is configured from the Matrix ACEDashboard.\n\n\nA processing workflow determines how an input MPEG transport stream has some or all of its audio elementary streams processed for loudness normalization.\n\n\nEach workflow requires details for input, audio streams to be processed, a loudness profile for each audio stream and output.\n\n\nFor details on the data fields of a loudness processing workflow, refer to the topic: \nLoudness processing workflow fields explained\n.\n\n\nThe process for creating a new loudness processing workflow is outlined below:\n\n\n\n\nFrom the Dashboard, click the \nCreate\n button to create a new loudness processing workflow\n\n\nEnter a name for the workflow\n\n\nEnter the Input details (UDP or ASI)\n\n\n\n\n\n\n\n\n\n\nIP inputs\n\n\nASI inputs\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEnter the Program IDs for the audio elementary streams to be processed for loudness normalization\n\n\nSelect a loudness profile for each audio stream. This determines the loudness normalization parameters to be applied to each stream.\n\n\n\n\n\n\n\n\nEnter Output details (UDP or ASI)\n\n\n\n\n\n\n\n\n\n\nIP inputs\n\n\nASI inputs\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nModify a loudness processing workflow\n\n\nThe process for modifying a loudness processing workflow is outlined below:\n\n\n\n\nFrom the Dashboard, click the \nExpand\n button to the right of the loudness processing workflow to be modified\n\n\nThe workflow fields expand, allowing users to modify them\n\n\n\n\n\n\n\n\nModify the fields as desired\n\n\nClick the \nApply Changes\n button to save your changes.\n\n\n\n\nDelete a loudness processing workflow\n\n\nThe process for deleting a loudness processing workflow is outlined below:\n\n\n\n\nFrom the Dashboard, click the \nDelete\n button to the right of the loudness processing workflow to be modified\n\n\n\n\n\n\n\n\nClick the \nConfirm\n popup to confirm that you want to delete the workflow\n\n\nThe workflow is deleted.\n\n\n\n\nClick here to read an explanation of each of the fields in a loudness processing workflow",
            "title": "Loudness processing workflows"
        },
        {
            "location": "/LoudnessProcessingWorkflows/index.html#loudness-processing-workflows",
            "text": "The processing of MPEG Transport Streams for loudness normalization is configured from the Matrix ACEDashboard.  Each loudness processing workflow consists of:   Values for Input parameters  Program IDs for each audio elementary stream to be processed  The Loudness Profile to apply to each audio elementary stream defined  Values for Output parameters",
            "title": "Loudness processing workflows"
        },
        {
            "location": "/LoudnessProcessingWorkflows/index.html#input-parameters",
            "text": "Each input must be an MPEG Transport Stream (SPTS or MPTS) arriving at the server via UDP/IP (Ethernet) or ASI interfaces.",
            "title": "Input parameters"
        },
        {
            "location": "/LoudnessProcessingWorkflows/index.html#audio-elementary-stream-program-ids-pids",
            "text": "Each audio elementary stream to be processed for loudness normalization, must be identified by its Program ID (PID).",
            "title": "Audio elementary stream Program IDs (PIDs)"
        },
        {
            "location": "/LoudnessProcessingWorkflows/index.html#loudness-profiles",
            "text": "A loudness profile must be selected to apply to each audio elementary stream. The loudness profile provides parameters for the loudness normalization of the audio stream.",
            "title": "Loudness profiles"
        },
        {
            "location": "/LoudnessProcessingWorkflows/index.html#output-parameters",
            "text": "Each input must have a corresponding output configured. Output can be configured for UDP/IP (Ethernet) or ASI interfaces.",
            "title": "Output parameters"
        },
        {
            "location": "/LoudnessProcessingWorkflows/index.html#create-a-new-loudness-processing-workflow",
            "text": "The processing of MPEG Transport Streams for loudness control is configured from the Matrix ACEDashboard.  A processing workflow determines how an input MPEG transport stream has some or all of its audio elementary streams processed for loudness normalization.  Each workflow requires details for input, audio streams to be processed, a loudness profile for each audio stream and output.  For details on the data fields of a loudness processing workflow, refer to the topic:  Loudness processing workflow fields explained .  The process for creating a new loudness processing workflow is outlined below:   From the Dashboard, click the  Create  button to create a new loudness processing workflow  Enter a name for the workflow  Enter the Input details (UDP or ASI)      IP inputs  ASI inputs            Enter the Program IDs for the audio elementary streams to be processed for loudness normalization  Select a loudness profile for each audio stream. This determines the loudness normalization parameters to be applied to each stream.     Enter Output details (UDP or ASI)      IP inputs  ASI inputs",
            "title": "Create a new loudness processing workflow"
        },
        {
            "location": "/LoudnessProcessingWorkflows/index.html#modify-a-loudness-processing-workflow",
            "text": "The process for modifying a loudness processing workflow is outlined below:   From the Dashboard, click the  Expand  button to the right of the loudness processing workflow to be modified  The workflow fields expand, allowing users to modify them     Modify the fields as desired  Click the  Apply Changes  button to save your changes.",
            "title": "Modify a loudness processing workflow"
        },
        {
            "location": "/LoudnessProcessingWorkflows/index.html#delete-a-loudness-processing-workflow",
            "text": "The process for deleting a loudness processing workflow is outlined below:   From the Dashboard, click the  Delete  button to the right of the loudness processing workflow to be modified     Click the  Confirm  popup to confirm that you want to delete the workflow  The workflow is deleted.   Click here to read an explanation of each of the fields in a loudness processing workflow",
            "title": "Delete a loudness processing workflow"
        },
        {
            "location": "/LoudnessProcessingWorkflowFields/index.html",
            "text": "Loudness processing workflow fields explained\n\n\nExplanations for each of the fields displayed in a Loudness Processing Workflow are explained below:\n\n\n\n\nInputs\n\n\nEach input must be an MPEG Transport Stream (SPTS or MPTS) arriving at the server via UDP/IP (Ethernet) or ASI interfaces.\n\n\nUDP\n\n\nIP address\n\n\nThis is the IP address of the device which is originating the MPEG Transport Stream. If using a multicast address, it must fall within the range 224.0.0.0 to 239.255.255.255.\n\n\nPort\n\n\nThe Port on which the MPEG Transport Stream input will be received (destination port), in other words, the port on the local server which receives the input.\n\n\nEnter a number between 1 and 65535.\n\n\nInterface\n\n\nThe IP address of the physical server hardware interface which will receive the MPEG Transport Stream. This field is provided in the case that more than one network interface is present on the server.\n\n\nSSM\n\n\nSource Specific Multicast. In a network using Protocol Independent Multicast routing (specifically PIM-SSM), this value is the source IP address of the multicast stream. When paired with the multicast IP address (above), it allows the Matrix ACE server to receive the specific multicast stream.\n\n\nASI\n\n\nCard\n\n\nThe physical ASI card number as identified by the operating system. The first ASI card on the server will usually have a number of 0. Subsequent additional ASI cards will be numbered 1,2,3\u2026 etc. The number of ASI cards which can be added to a server will depend on the capacity of the server.\n\n\nEnter the port number as an integer.\n\n\nPort\n\n\nThe number of the physical port receiving an MPEG Transport Stream input on the card identified by the Card number above. The first port is usually numbered 0, with port numbers ascending through 1,2,3. A four port ASI card will have port numbers 0, 1, 2 and 3. A two port ASI card will have port numbers 0 and 1.\n\n\nEnter the port number as an integer.\n\n\nFIFO Size\n\n\nThe size of the First-In-First-Out (FIFO) buffer. A FIFO buffer manages the flow of data delivery by storing MPEG Transport Stream data in a memory buffer as it is received and releasing the data for processing in the same order that it was received (the first data into the buffer is the first data out).\n\n\nThis value sets the buffer size on the DekTec ASI card (default 2MB). 2MB is often too large a buffer size. This setting allows users to tune latency by decreasing the buffer size on the ASI card itself.\n\n\nEnter a value in Megabytes (Mb).\n\n\nAudio streams\n\n\nAudio elementary stream Program IDs (PIDs)\n\n\nEach audio elementary stream which is to be processed for loudness normalization, must be identified by its Program ID (PID).\n\n\nEnter the audio elementary stream\u2019s Program ID in hexadecimal (e.g. 0x0022) or decimal format (e.g. 34).\n\n\nLoudness profiles\n\n\nA loudness profile must be selected to apply to each audio elementary stream (specified by its PID above). The loudness profile provides parameters for the \nloudness normalization of the audio stream\n.\n\n\nLoudness profiles are defined on the \nProfiles tab of the web user interface\n.\n\n\nChoose a loudness profile from the drop-down list provided.\n\n\nOutputs\n\n\nEach input must have a corresponding output configured.\n\n\nUDP\n\n\nIP address\n\n\nFor a Unicast stream, this is the IP address of the computer which is receivingthe MPEG Transport Stream (the remote computer). For a Multicast stream this is the multicast address originating the stream (this server). A multicast address must fall within the range 224.0.0.0 to 239.255.255.255.\n\n\nPort\n\n\nThe Port over which the MPEG Transport Stream output will be transmitted, in other words, the port on the local server which transmits the output stream.\n\n\nEnter a number between 1 and 65535.\n\n\nInterface\n\n\nThe IP address of the physical server hardware interface which will transmit the MPEG Transport Stream. This field is provided in the case that more than one network interface is present on the server.\n\n\nASI\n\n\nCard\n\n\nThe physical ASI card number as identified by the operating system. The first ASI card on the server will usually have a number of 0. Subsequent additional ASI cards will be numbered 1,2,3\u2026 etc. The number of ASI cards which can be added to a server will depend on the capacity of the server.\n\n\nEnter the port number as an integer.\n\n\nPort\n\n\nThe number of the physical port transmitting an MPEG Transport Stream output on the card identified by the Card number above. The first port is usually numbered 0, with port numbers ascending through 1,2,3. A four port ASI card will have port numbers 0, 1, 2 and 3. A two port ASI card will have port numbers 0 and 1.\n\n\nEnter the port number as an integer.\n\n\nFIFO Size\n\n\nThe size of the First-In-First-Out (FIFO) buffer. A FIFO buffer manages the flow of data delivery by storing MPEG Transport Stream data in a memory buffer as it is received and releasing the data for transmission in the same order that it was received (the first data into the buffer is the first data out).\n\n\nThis value sets the buffer size on the DekTec ASI card (default 2MB). 2MB is often too large a buffer size. This setting allows users to tune latency by decreasing the buffer size on the ASI card itself.\n\n\nEnter a value in Megabytes (Mb).",
            "title": "Loudness processing workflow fields explained"
        },
        {
            "location": "/LoudnessProcessingWorkflowFields/index.html#loudness-processing-workflow-fields-explained",
            "text": "Explanations for each of the fields displayed in a Loudness Processing Workflow are explained below:",
            "title": "Loudness processing workflow fields explained"
        },
        {
            "location": "/LoudnessProcessingWorkflowFields/index.html#inputs",
            "text": "Each input must be an MPEG Transport Stream (SPTS or MPTS) arriving at the server via UDP/IP (Ethernet) or ASI interfaces.",
            "title": "Inputs"
        },
        {
            "location": "/LoudnessProcessingWorkflowFields/index.html#udp",
            "text": "IP address  This is the IP address of the device which is originating the MPEG Transport Stream. If using a multicast address, it must fall within the range 224.0.0.0 to 239.255.255.255.  Port  The Port on which the MPEG Transport Stream input will be received (destination port), in other words, the port on the local server which receives the input.  Enter a number between 1 and 65535.  Interface  The IP address of the physical server hardware interface which will receive the MPEG Transport Stream. This field is provided in the case that more than one network interface is present on the server.  SSM  Source Specific Multicast. In a network using Protocol Independent Multicast routing (specifically PIM-SSM), this value is the source IP address of the multicast stream. When paired with the multicast IP address (above), it allows the Matrix ACE server to receive the specific multicast stream.",
            "title": "UDP"
        },
        {
            "location": "/LoudnessProcessingWorkflowFields/index.html#asi",
            "text": "Card  The physical ASI card number as identified by the operating system. The first ASI card on the server will usually have a number of 0. Subsequent additional ASI cards will be numbered 1,2,3\u2026 etc. The number of ASI cards which can be added to a server will depend on the capacity of the server.  Enter the port number as an integer.  Port  The number of the physical port receiving an MPEG Transport Stream input on the card identified by the Card number above. The first port is usually numbered 0, with port numbers ascending through 1,2,3. A four port ASI card will have port numbers 0, 1, 2 and 3. A two port ASI card will have port numbers 0 and 1.  Enter the port number as an integer.  FIFO Size  The size of the First-In-First-Out (FIFO) buffer. A FIFO buffer manages the flow of data delivery by storing MPEG Transport Stream data in a memory buffer as it is received and releasing the data for processing in the same order that it was received (the first data into the buffer is the first data out).  This value sets the buffer size on the DekTec ASI card (default 2MB). 2MB is often too large a buffer size. This setting allows users to tune latency by decreasing the buffer size on the ASI card itself.  Enter a value in Megabytes (Mb).",
            "title": "ASI"
        },
        {
            "location": "/LoudnessProcessingWorkflowFields/index.html#audio-streams",
            "text": "Audio elementary stream Program IDs (PIDs)  Each audio elementary stream which is to be processed for loudness normalization, must be identified by its Program ID (PID).  Enter the audio elementary stream\u2019s Program ID in hexadecimal (e.g. 0x0022) or decimal format (e.g. 34).  Loudness profiles  A loudness profile must be selected to apply to each audio elementary stream (specified by its PID above). The loudness profile provides parameters for the  loudness normalization of the audio stream .  Loudness profiles are defined on the  Profiles tab of the web user interface .  Choose a loudness profile from the drop-down list provided.",
            "title": "Audio streams"
        },
        {
            "location": "/LoudnessProcessingWorkflowFields/index.html#outputs",
            "text": "Each input must have a corresponding output configured.",
            "title": "Outputs"
        },
        {
            "location": "/LoudnessProcessingWorkflowFields/index.html#udp_1",
            "text": "IP address  For a Unicast stream, this is the IP address of the computer which is receivingthe MPEG Transport Stream (the remote computer). For a Multicast stream this is the multicast address originating the stream (this server). A multicast address must fall within the range 224.0.0.0 to 239.255.255.255.  Port  The Port over which the MPEG Transport Stream output will be transmitted, in other words, the port on the local server which transmits the output stream.  Enter a number between 1 and 65535.  Interface  The IP address of the physical server hardware interface which will transmit the MPEG Transport Stream. This field is provided in the case that more than one network interface is present on the server.",
            "title": "UDP"
        },
        {
            "location": "/LoudnessProcessingWorkflowFields/index.html#asi_1",
            "text": "Card  The physical ASI card number as identified by the operating system. The first ASI card on the server will usually have a number of 0. Subsequent additional ASI cards will be numbered 1,2,3\u2026 etc. The number of ASI cards which can be added to a server will depend on the capacity of the server.  Enter the port number as an integer.  Port  The number of the physical port transmitting an MPEG Transport Stream output on the card identified by the Card number above. The first port is usually numbered 0, with port numbers ascending through 1,2,3. A four port ASI card will have port numbers 0, 1, 2 and 3. A two port ASI card will have port numbers 0 and 1.  Enter the port number as an integer.  FIFO Size  The size of the First-In-First-Out (FIFO) buffer. A FIFO buffer manages the flow of data delivery by storing MPEG Transport Stream data in a memory buffer as it is received and releasing the data for transmission in the same order that it was received (the first data into the buffer is the first data out).  This value sets the buffer size on the DekTec ASI card (default 2MB). 2MB is often too large a buffer size. This setting allows users to tune latency by decreasing the buffer size on the ASI card itself.  Enter a value in Megabytes (Mb).",
            "title": "ASI"
        },
        {
            "location": "/LoudnessProfiles/index.html",
            "text": "Loudness profiles\n\n\nMPEG Transport Streams are processed for loudness in Matrix ACE by applying a certain Loudness Profile to them.\n\n\nA Loudness Profile is a set of saved values which are used to apply loudness normalization to an audio stream.\n\n\nThe values are passed as parameters to the loudness processor, which uses its proprietary algorithms to output audio which meets the specified Target Loudness levels.\n\n\nBuilt-in loudness profiles\n\n\nBuilt-in loudness profiles included in Matrix ACE include:\n\n\n\n\nFreeTV OP-59\n\n\nARIB TR-B32\n\n\nATSC A/85\n\n\nEBU R128\n\n\nHome Cinema\n\n\nGaming\n\n\nRadio Broadcast\n\n\nGeneral TV Broadcast\n\n\nEarphones\n\n\nMobile Device\n\n\n\n\nCustom loudness profiles\n\n\nCustomized loudness profiles can also be created from existing profiles, for situations where the built-in profiles do not meet the requirements of the user\u2019s environment.\n\n\nCreate a new custom loudness profile\n\n\nMPEG Transport Streams are processed for loudness in Matrix ACE by applying a certain loudness profile to the stream.\n\n\nA set of built-in loudness profiles are included in Matrix ACE.\n\n\nThese profiles can be copied and modified to create new custom profiles.\n\n\nThe process for creating a new custom loudness profile is outlined below:\n\n\n\n\nClick on an existing loudness profile to reveal its values\n\n\nClick the \nCustomize\n button to create a new custom loudness profile. The new profile is populated with values from the existing loudness profile chosen in the step above\n\n\n\n\n\n\n\n\nEnter a new Name for the custom profile\n\n\n\n\nModify each of the custom loudness profile\u2019s fields to suit your requirements\n\n\n\n\n\n\nClick the \nApply Changes\n button to save the values of the custom loudness profile.\n\n\n\n\n\n\nModify a custom loudness profile\n\n\nThe loudness profiles built into Matrix ACE can be copied and modified to create new custom profiles.\n\n\nOnce created, these custom loudness profiles can be modified as needed and the changes saved.\n\n\nThe process for modifying an existing custom loudness profile is outlined below:\n\n\n\n\nClick on an existing custom loudness profile to reveal its values\n\n\n\n\nModify each of the custom loudness profile\u2019s fields to suit your requirements\n\n\n\n\n\n\nClick the \nSave\n button to save the new values of the custom loudness profile.\n\n\n\n\n\n\nDelete a custom loudness profile\n\n\nCustom loudness profiles can be deleted as required.\n\n\nThe process for deleting an existing custom loudness profile is outlined below:\n\n\n\n\nClick on an existing custom loudness profile to reveal its values\n\n\nClick the \nDelete\n button to delete the custom loudness profile.\n\n\n\n\nNote:\n Built-in loudness profiles cannot be deleted.\n\n\nClick here to read an  explanation of the each of the fields in a loudness profile",
            "title": "Loudness profiles"
        },
        {
            "location": "/LoudnessProfiles/index.html#loudness-profiles",
            "text": "MPEG Transport Streams are processed for loudness in Matrix ACE by applying a certain Loudness Profile to them.  A Loudness Profile is a set of saved values which are used to apply loudness normalization to an audio stream.  The values are passed as parameters to the loudness processor, which uses its proprietary algorithms to output audio which meets the specified Target Loudness levels.",
            "title": "Loudness profiles"
        },
        {
            "location": "/LoudnessProfiles/index.html#built-in-loudness-profiles",
            "text": "Built-in loudness profiles included in Matrix ACE include:   FreeTV OP-59  ARIB TR-B32  ATSC A/85  EBU R128  Home Cinema  Gaming  Radio Broadcast  General TV Broadcast  Earphones  Mobile Device",
            "title": "Built-in loudness profiles"
        },
        {
            "location": "/LoudnessProfiles/index.html#custom-loudness-profiles",
            "text": "Customized loudness profiles can also be created from existing profiles, for situations where the built-in profiles do not meet the requirements of the user\u2019s environment.",
            "title": "Custom loudness profiles"
        },
        {
            "location": "/LoudnessProfiles/index.html#create-a-new-custom-loudness-profile",
            "text": "MPEG Transport Streams are processed for loudness in Matrix ACE by applying a certain loudness profile to the stream.  A set of built-in loudness profiles are included in Matrix ACE.  These profiles can be copied and modified to create new custom profiles.  The process for creating a new custom loudness profile is outlined below:   Click on an existing loudness profile to reveal its values  Click the  Customize  button to create a new custom loudness profile. The new profile is populated with values from the existing loudness profile chosen in the step above     Enter a new Name for the custom profile   Modify each of the custom loudness profile\u2019s fields to suit your requirements    Click the  Apply Changes  button to save the values of the custom loudness profile.",
            "title": "Create a new custom loudness profile"
        },
        {
            "location": "/LoudnessProfiles/index.html#modify-a-custom-loudness-profile",
            "text": "The loudness profiles built into Matrix ACE can be copied and modified to create new custom profiles.  Once created, these custom loudness profiles can be modified as needed and the changes saved.  The process for modifying an existing custom loudness profile is outlined below:   Click on an existing custom loudness profile to reveal its values   Modify each of the custom loudness profile\u2019s fields to suit your requirements    Click the  Save  button to save the new values of the custom loudness profile.",
            "title": "Modify a custom loudness profile"
        },
        {
            "location": "/LoudnessProfiles/index.html#delete-a-custom-loudness-profile",
            "text": "Custom loudness profiles can be deleted as required.  The process for deleting an existing custom loudness profile is outlined below:   Click on an existing custom loudness profile to reveal its values  Click the  Delete  button to delete the custom loudness profile.   Note:  Built-in loudness profiles cannot be deleted.  Click here to read an  explanation of the each of the fields in a loudness profile",
            "title": "Delete a custom loudness profile"
        },
        {
            "location": "/LoudnessProfileFields/index.html",
            "text": "Loudness profile fields explained\n\n\nExplanations for each of the fields displayed in a Loudness Profile are explained below:\n\n\n\n\nMaximum True Peak Level\n\n\nThe True Peak Level is \n\u201cthe maximum (positive or negative) value of the signal waveform in the continuous time domain.\u201dFrom Recommendation ITU-R BS.1770-4 (10/2015)\n\n\nThe True Peak level measures loudness values between sample peaks with a specially designed algorithm. True Peak measurement reveals inter sample peaks that can be missed in the quantization process, and which have the potential to inflate the upper limit of the measured Loudness Range, resulting in a measured Program Loudness level that is skewed toward the higher value.\n\n\nEnabling and setting a Maximum True Peak Level, limits the maximum value of the Loudness Range to the configured value, resulting in a loudness normalization process which produces a Program Loudness level which is more representative of the audio signal.\n\n\nMeasured in Decibels True Peak (dBTP).\n\n\nEnter a value between -10 and 0 dBTP. Defaults vary by standard and range between -1 to -2 dBTP.\n\n\nProgram Loudness\n\n\nProgram Loudness is \n\u201cthe integrated loudness over the duration of a program.\u201d From EBU \u2013 Recommendation R 128 (June 2014)\n\n\nIt is a measure of the average perceived loudness of the audio signal over the duration of a program.\n\n\nIf the Program Loudness of the input audio is known that value should be entered here. If the input audio Program Loudness value is unknown, then use the default value. Loudness processing will occur to attempt to normalize output to the Target Loudness value.\n\n\nMeasured in Loudness Units Full Scale (LUFS). 1 LUFS = 1 LKFN (Loudness K-weighted Full Scale) = 1 decibel (1 dB).\n\n\nEnter a value between -50 and 0. Defaults vary by standard and generally range between -16 to -24 LUFS.\n\n\nTarget Loudness Level\n\n\nThe Target Loudness is the expected Program Loudness to be output as a product of the loudness normalization process.\n\n\nProgram Loudness is a measure of the average perceived loudness of the audio signal over the duration of a program.\n\n\nThe Target Loudness is a value which facilitates the exchange of audio content. Audio content should be engineered to meet Target Loudness levels so that the recipient of the audio content has the assurance that it conforms to the agreed specifications. If content which does not meet Target Loudness is used as input, a gain or loss may need to be applied to it so that it is brought into compliance with the required loudness standards.\n\n\nThis value should be set to the expected output Target Loudness value as specified in the loudness processing standard relevant to the jurisdiction which applies to the broadcast facility. For example, In Australia the value should be set to -24 LUFS (FreeTV OP59) for Broadcasting distribution.\n\n\nMeasured in Loudness Units Full Scale (LUFS). 1 LUFS = 1 LKFS (Loudness K-weighted Full Scale) = 1 decibel (1 dB).\n\n\nEnter a value between -40 and -1. Defaults vary by standard and generally range between -20 to -24 LUFS\n\n\nPost Process Max Gain\n\n\nThis value specifies the maximum gain that can be applied during the loudness normalization process in order to meet the output Target Loudness. The gain is applied to the average level measured across the length of the program. The length of the program is determined by the value in the Post Process Seconds value.\n\n\nMeasured in Loudness Units Full Scale (LUFS). 1 LUFS = 1 LKFS (Loudness K-weighted Full Scale) = 1 decibel (1 dB).\n\n\nIf a value of 0 is entered, the normalization process applies gain where needed without using a limiting value.\n\n\nPost Process Max Attenuation\n\n\nThis value specifies the maximum attenuation (reduction) that can be applied during the loudness normalization process in order to meet the output Target Loudness. The attenuation is applied to the average level measured across the length of the program. The length of the program is determined by the value in the Post Process Seconds value.\n\n\nMeasured in Loudness Units Full Scale (LUFS). 1 LUFS = 1 LKFS (Loudness K-weighted Full Scale) = 1 decibel (1 dB).\n\n\nIf a value of 0 is entered, the normalization process applies attenuation where needed without using a limiting value.\n\n\nPost Process Seconds\n\n\nThis value sets the duration of the audio program used in the algorithm to apply the Program Loudness level adaptation for the audio stream.\n\n\nWhen computing a Program Loudness level for an audio file, the overall length of the file is used as the program length. When processing a continuous audio stream, the underlying loudness processor must compute a loudness level from within the stream and not a from static length file. For this reason a program length must be arbitrarily set to allow the loudness algorithm to compute a Program Loudness level from a portion of the stream temporarily stored in a memory buffer.\n\n\nMeasured in seconds.\n\n\nValues typically range between 20 and 60 seconds\n\n\nAdaptation\n\n\nThe amount of loudness adaptation applied to the incoming audio signal.\n\n\n*Adaptation relies \u201con the state-of-the-art loudness processing provided by Linear Acoustic\u00ae APTO\u2122.stream loudness processor. The audio signal is carefully controlled in a way that preserves the transients, sonic image and artistic intent of the source, while increasing dialog intelligibility and loudness consistency. Consequently, a dynamic and balanced mix can be tailored to any destination platform, from theatrical to mobile, without resulting in subjectively perceived compressed sound.\n\n\nAdvanced Loudness Adaptation uses psychoacoustic analysis processes on the source file and in between any levelling steps that drive adaptive decision matrix to determine the intensity and type of processing required. This fully automated workflow ensures ideal results in terms of audio quality and standard compliance. Audio that is deemed already compliant for the intended use case will pass through the workflow untouched.\u201d* \nFrom Linear Acoustic\u00ae APTO\u2122.stream description.\n\n\nA lower value will result in lower dynamic reduction, (a wider Loudness Range). A higher value will result in a higher dynamic reduction (a narrower Loudness Range).\n\n\nMeasured in percentage (0%-100%).\n\n\nPost Process Adaptation Ratio\n\n\nThe amount of gain or attenuation allowed per second during the overall program loudness normalization process. A higher value (2-6 LU) will result in faster compliance with the Target Loudness, but may introduce user-perceived gain changes. A lower value (0.5-2 LU) will contribute to a more subtle loudness normalization process to achieve the Target Loudness level, with a less perceptable change to the overall loudness.\n\n\nMeasured in LU (Loudness Units). 1 LU = 1 dB.\n\n\nSuggested values should be in the range 0.5 to 2 LU.",
            "title": "Loudness profile fields explained"
        },
        {
            "location": "/LoudnessProfileFields/index.html#loudness-profile-fields-explained",
            "text": "Explanations for each of the fields displayed in a Loudness Profile are explained below:   Maximum True Peak Level  The True Peak Level is  \u201cthe maximum (positive or negative) value of the signal waveform in the continuous time domain.\u201dFrom Recommendation ITU-R BS.1770-4 (10/2015)  The True Peak level measures loudness values between sample peaks with a specially designed algorithm. True Peak measurement reveals inter sample peaks that can be missed in the quantization process, and which have the potential to inflate the upper limit of the measured Loudness Range, resulting in a measured Program Loudness level that is skewed toward the higher value.  Enabling and setting a Maximum True Peak Level, limits the maximum value of the Loudness Range to the configured value, resulting in a loudness normalization process which produces a Program Loudness level which is more representative of the audio signal.  Measured in Decibels True Peak (dBTP).  Enter a value between -10 and 0 dBTP. Defaults vary by standard and range between -1 to -2 dBTP.  Program Loudness  Program Loudness is  \u201cthe integrated loudness over the duration of a program.\u201d From EBU \u2013 Recommendation R 128 (June 2014)  It is a measure of the average perceived loudness of the audio signal over the duration of a program.  If the Program Loudness of the input audio is known that value should be entered here. If the input audio Program Loudness value is unknown, then use the default value. Loudness processing will occur to attempt to normalize output to the Target Loudness value.  Measured in Loudness Units Full Scale (LUFS). 1 LUFS = 1 LKFN (Loudness K-weighted Full Scale) = 1 decibel (1 dB).  Enter a value between -50 and 0. Defaults vary by standard and generally range between -16 to -24 LUFS.  Target Loudness Level  The Target Loudness is the expected Program Loudness to be output as a product of the loudness normalization process.  Program Loudness is a measure of the average perceived loudness of the audio signal over the duration of a program.  The Target Loudness is a value which facilitates the exchange of audio content. Audio content should be engineered to meet Target Loudness levels so that the recipient of the audio content has the assurance that it conforms to the agreed specifications. If content which does not meet Target Loudness is used as input, a gain or loss may need to be applied to it so that it is brought into compliance with the required loudness standards.  This value should be set to the expected output Target Loudness value as specified in the loudness processing standard relevant to the jurisdiction which applies to the broadcast facility. For example, In Australia the value should be set to -24 LUFS (FreeTV OP59) for Broadcasting distribution.  Measured in Loudness Units Full Scale (LUFS). 1 LUFS = 1 LKFS (Loudness K-weighted Full Scale) = 1 decibel (1 dB).  Enter a value between -40 and -1. Defaults vary by standard and generally range between -20 to -24 LUFS  Post Process Max Gain  This value specifies the maximum gain that can be applied during the loudness normalization process in order to meet the output Target Loudness. The gain is applied to the average level measured across the length of the program. The length of the program is determined by the value in the Post Process Seconds value.  Measured in Loudness Units Full Scale (LUFS). 1 LUFS = 1 LKFS (Loudness K-weighted Full Scale) = 1 decibel (1 dB).  If a value of 0 is entered, the normalization process applies gain where needed without using a limiting value.  Post Process Max Attenuation  This value specifies the maximum attenuation (reduction) that can be applied during the loudness normalization process in order to meet the output Target Loudness. The attenuation is applied to the average level measured across the length of the program. The length of the program is determined by the value in the Post Process Seconds value.  Measured in Loudness Units Full Scale (LUFS). 1 LUFS = 1 LKFS (Loudness K-weighted Full Scale) = 1 decibel (1 dB).  If a value of 0 is entered, the normalization process applies attenuation where needed without using a limiting value.  Post Process Seconds  This value sets the duration of the audio program used in the algorithm to apply the Program Loudness level adaptation for the audio stream.  When computing a Program Loudness level for an audio file, the overall length of the file is used as the program length. When processing a continuous audio stream, the underlying loudness processor must compute a loudness level from within the stream and not a from static length file. For this reason a program length must be arbitrarily set to allow the loudness algorithm to compute a Program Loudness level from a portion of the stream temporarily stored in a memory buffer.  Measured in seconds.  Values typically range between 20 and 60 seconds  Adaptation  The amount of loudness adaptation applied to the incoming audio signal.  *Adaptation relies \u201con the state-of-the-art loudness processing provided by Linear Acoustic\u00ae APTO\u2122.stream loudness processor. The audio signal is carefully controlled in a way that preserves the transients, sonic image and artistic intent of the source, while increasing dialog intelligibility and loudness consistency. Consequently, a dynamic and balanced mix can be tailored to any destination platform, from theatrical to mobile, without resulting in subjectively perceived compressed sound.  Advanced Loudness Adaptation uses psychoacoustic analysis processes on the source file and in between any levelling steps that drive adaptive decision matrix to determine the intensity and type of processing required. This fully automated workflow ensures ideal results in terms of audio quality and standard compliance. Audio that is deemed already compliant for the intended use case will pass through the workflow untouched.\u201d*  From Linear Acoustic\u00ae APTO\u2122.stream description.  A lower value will result in lower dynamic reduction, (a wider Loudness Range). A higher value will result in a higher dynamic reduction (a narrower Loudness Range).  Measured in percentage (0%-100%).  Post Process Adaptation Ratio  The amount of gain or attenuation allowed per second during the overall program loudness normalization process. A higher value (2-6 LU) will result in faster compliance with the Target Loudness, but may introduce user-perceived gain changes. A lower value (0.5-2 LU) will contribute to a more subtle loudness normalization process to achieve the Target Loudness level, with a less perceptable change to the overall loudness.  Measured in LU (Loudness Units). 1 LU = 1 dB.  Suggested values should be in the range 0.5 to 2 LU.",
            "title": "Loudness profile fields explained"
        },
        {
            "location": "/UsingMatrixACE/index.html",
            "text": "Using Matrix ACE\n\n\nAfter Matrix ACE has been configured, the application behaves as a set-and-forget process, accepting input, applying loudness profiles and routing output according to the configured values.\n\n\nConfiguration changes are applied to the running system in a manner which causes minimum interruption to overall performance.\n\n\nThe Matrix ACE system is designed to operate unattended with minimal system downtime.\n\n\nIf problems are encountered during the operation of Matrix ACE, please contact \nMediaware support\n.",
            "title": "Using Matrix ACE"
        },
        {
            "location": "/UsingMatrixACE/index.html#using-matrix-ace",
            "text": "After Matrix ACE has been configured, the application behaves as a set-and-forget process, accepting input, applying loudness profiles and routing output according to the configured values.  Configuration changes are applied to the running system in a manner which causes minimum interruption to overall performance.  The Matrix ACE system is designed to operate unattended with minimal system downtime.  If problems are encountered during the operation of Matrix ACE, please contact  Mediaware support .",
            "title": "Using Matrix ACE"
        },
        {
            "location": "/ReferenceMaterials/index.html",
            "text": "Reference materials\n\n\nThis topic contains links to standards and reference material relating to loudness control in the broadcast television industry.\n\n\nStandards\n\n\nClick on the desired link below to read more about the standards which Matrix ACE adheres to in providing loudness processing to MPEG transport streams.\n\n\n\n\nITU BS.1770\n - Algorithms to measure audio programme loudness and true-peak audio level\n\n\nFreeTV OP59\n - FreeTV Australia Operational Practices\n\n\nEBU R128\n European Broadcasting Union (EBU) 300 series technical publications (loudness control)\n\n\nATSC A/85\n - Advanced Television Systems Committee (ATSC) - Techniques for Establishing and Maintaining Audio Loudness for Digital Television\n\n\nARIB TR-BR32\n - Association of Radio Industries and Business (ARIB) - Operational Guidelines for Loudness of Digital Television Programs\n\n\n\n\nOther documents\n\n\n\n\nOn the way to loudness nirvana \u2014 audio levelling with EBU R 128\n\n\nMulticast IP addressing\n\n\nMotion Pictures Experts Group (MPEG Standards)",
            "title": "Reference materials"
        },
        {
            "location": "/ReferenceMaterials/index.html#reference-materials",
            "text": "This topic contains links to standards and reference material relating to loudness control in the broadcast television industry.",
            "title": "Reference materials"
        },
        {
            "location": "/ReferenceMaterials/index.html#standards",
            "text": "Click on the desired link below to read more about the standards which Matrix ACE adheres to in providing loudness processing to MPEG transport streams.   ITU BS.1770  - Algorithms to measure audio programme loudness and true-peak audio level  FreeTV OP59  - FreeTV Australia Operational Practices  EBU R128  European Broadcasting Union (EBU) 300 series technical publications (loudness control)  ATSC A/85  - Advanced Television Systems Committee (ATSC) - Techniques for Establishing and Maintaining Audio Loudness for Digital Television  ARIB TR-BR32  - Association of Radio Industries and Business (ARIB) - Operational Guidelines for Loudness of Digital Television Programs",
            "title": "Standards"
        },
        {
            "location": "/ReferenceMaterials/index.html#other-documents",
            "text": "On the way to loudness nirvana \u2014 audio levelling with EBU R 128  Multicast IP addressing  Motion Pictures Experts Group (MPEG Standards)",
            "title": "Other documents"
        },
        {
            "location": "/TermsCopyrightsAndTrademarks/index.html",
            "text": "Terms, Copyrights and Trademarks\n\n\nTerms and Conditions\n\n\nAll information in this online help is provided on an \u2018as is\u2019 and \u2018as available\u2019 basis without warranties of any kind, either express or implied, including but not limited to warranties of title, noninfringement or implied warranties of merchantability or fitness for a particular purpose. No advice or information given by Mediaware International Pty. Ltd. (Mediaware), its affiliates, or its contractors or their respective employees shall create a warranty. Neither Mediaware nor its affiliates warranties that this online help are provided free of viruses, worms, Trojan horses or other harmful components.\n\n\nUnder no circumstances shall Mediaware, its affiliates or its contractors be liable for any direct, indirect, incidental, special, punitive or consequential damages that result in any way from your use of or inability to use Mediaware\u2019s online help or your reliance on or use of this information, or that results from mistakes, omissions, interruptions, deletion of files, errors, defects, delays in operation or transmission, or any failure of performance.\n\n\nCopyright\n\n\nThis online help is owned by Mediaware and is protected by United States copyright laws and international treaty provisions. You may view this help on an \u2018as and when\u2019 basis. However, you may not reproduce, upload, post, publish, transmit or distribute in any way this information, or other material which is protected by copyright, or other proprietary right, or derivative works with respect thereto, without obtaining prior written permission from Mediaware. You may not post, publish, reproduce, transmit or distribute in any way any component of Mediaware\u2019s online help  itself or derivative works with respect thereto, as Mediaware\u2019s online help is copyrighted as a collective work under United States copyright laws.\n\n\nTrademarks\n\n\nAll trademarks are acknowledged.\n\n\nLinux\n is a Trademark of Linus Torvalds.\n\n\nLinear Acoustic\u00ae\n is a Registered Trademark of TLS Corp.\n\n\nAPTO.stream\n is a Trademark of TLS Corp.",
            "title": "Terms"
        },
        {
            "location": "/TermsCopyrightsAndTrademarks/index.html#terms-copyrights-and-trademarks",
            "text": "",
            "title": "Terms, Copyrights and Trademarks"
        },
        {
            "location": "/TermsCopyrightsAndTrademarks/index.html#terms-and-conditions",
            "text": "All information in this online help is provided on an \u2018as is\u2019 and \u2018as available\u2019 basis without warranties of any kind, either express or implied, including but not limited to warranties of title, noninfringement or implied warranties of merchantability or fitness for a particular purpose. No advice or information given by Mediaware International Pty. Ltd. (Mediaware), its affiliates, or its contractors or their respective employees shall create a warranty. Neither Mediaware nor its affiliates warranties that this online help are provided free of viruses, worms, Trojan horses or other harmful components.  Under no circumstances shall Mediaware, its affiliates or its contractors be liable for any direct, indirect, incidental, special, punitive or consequential damages that result in any way from your use of or inability to use Mediaware\u2019s online help or your reliance on or use of this information, or that results from mistakes, omissions, interruptions, deletion of files, errors, defects, delays in operation or transmission, or any failure of performance.",
            "title": "Terms and Conditions"
        },
        {
            "location": "/TermsCopyrightsAndTrademarks/index.html#copyright",
            "text": "This online help is owned by Mediaware and is protected by United States copyright laws and international treaty provisions. You may view this help on an \u2018as and when\u2019 basis. However, you may not reproduce, upload, post, publish, transmit or distribute in any way this information, or other material which is protected by copyright, or other proprietary right, or derivative works with respect thereto, without obtaining prior written permission from Mediaware. You may not post, publish, reproduce, transmit or distribute in any way any component of Mediaware\u2019s online help  itself or derivative works with respect thereto, as Mediaware\u2019s online help is copyrighted as a collective work under United States copyright laws.",
            "title": "Copyright"
        },
        {
            "location": "/TermsCopyrightsAndTrademarks/index.html#trademarks",
            "text": "All trademarks are acknowledged.  Linux  is a Trademark of Linus Torvalds.  Linear Acoustic\u00ae  is a Registered Trademark of TLS Corp.  APTO.stream  is a Trademark of TLS Corp.",
            "title": "Trademarks"
        }
    ]
}